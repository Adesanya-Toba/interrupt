<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20200629 02:22:58.304" generator="Robot 3.0.4 (Python 2.7.17 on linux2)">
<suite source="/workspace/tests/test-shell-help.robot" id="s1" name="test-shell-help">
<kw type="setup" name="Setup" library="renode-keywords">
<msg timestamp="20200629 02:22:58.379" level="TRACE">Arguments: [  ]</msg>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>platform.system()</arg>
<arg>modules=platform</arg>
</arguments>
<assign>
<var>${SYSTEM}</var>
</assign>
<msg timestamp="20200629 02:22:58.380" level="TRACE">Arguments: [ 'platform.system()' | modules='platform' ]</msg>
<msg timestamp="20200629 02:22:58.387" level="TRACE">Return: b'Linux'</msg>
<msg timestamp="20200629 02:22:58.388" level="INFO">${SYSTEM} = Linux</msg>
<status status="PASS" endtime="20200629 02:22:58.388" starttime="20200629 02:22:58.380"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG}</arg>
<arg>Debug</arg>
<arg>${CONFIGURATION}</arg>
</arguments>
<assign>
<var>${CONFIGURATION}</var>
</assign>
<msg timestamp="20200629 02:22:58.389" level="TRACE">Arguments: [ 'not True and False' | 'Debug' | '${CONFIGURATION}' ]</msg>
<msg timestamp="20200629 02:22:58.389" level="TRACE">Return: 'Release'</msg>
<msg timestamp="20200629 02:22:58.389" level="INFO">${CONFIGURATION} = Release</msg>
<status status="PASS" endtime="20200629 02:22:58.389" starttime="20200629 02:22:58.388"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>--robot-server-port</arg>
<arg>${PORT_NUMBER}</arg>
<arg>--hide-log</arg>
</arguments>
<assign>
<var>@{PARAMS}</var>
</assign>
<msg timestamp="20200629 02:22:58.389" level="TRACE">Arguments: [ '--robot-server-port' | b'9999' | '--hide-log' ]</msg>
<msg timestamp="20200629 02:22:58.390" level="TRACE">Return: ['--robot-server-port', b'9999', '--hide-log']</msg>
<msg timestamp="20200629 02:22:58.390" level="INFO">@{PARAMS} = [ --robot-server-port | 9999 | --hide-log ]</msg>
<status status="PASS" endtime="20200629 02:22:58.390" starttime="20200629 02:22:58.389"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${DISABLE_XWT}</arg>
<arg>Insert Into List</arg>
<arg>${PARAMS}</arg>
<arg>0</arg>
<arg>--disable-xwt</arg>
</arguments>
<msg timestamp="20200629 02:22:58.390" level="TRACE">Arguments: [ 'False' | 'Insert Into List' | '${PARAMS}' | '0' | '--disable-xwt' ]</msg>
<msg timestamp="20200629 02:22:58.390" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:22:58.391" starttime="20200629 02:22:58.390"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER}</arg>
<arg>File Should Exist</arg>
<arg>${DIRECTORY}/${BINARY_NAME}</arg>
<arg>msg=Robot Framework remote server binary not found (${DIRECTORY}/${BINARY_NAME}). Did you forget to build it in ${CONFIGURATION} configuration?</arg>
</arguments>
<msg timestamp="20200629 02:22:58.391" level="TRACE">Arguments: [ 'not True' | 'File Should Exist' | '${DIRECTORY}/${BINARY_NAME}' | 'msg=Robot Framework remote server binary not found (${DIRECTORY}/${BINARY_NAME}). Did you forget to build it in ${CONFIGURATION} configuration?' ]</msg>
<msg timestamp="20200629 02:22:58.391" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:22:58.391" starttime="20200629 02:22:58.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and not '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>mono</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
</arguments>
<msg timestamp="20200629 02:22:58.392" level="TRACE">Arguments: [ "not True and not False and not 'Linux' == 'Windows'" | 'Start Process' | 'mono' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' ]</msg>
<msg timestamp="20200629 02:22:58.392" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:22:58.392" starttime="20200629 02:22:58.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<arg>shell=true</arg>
</arguments>
<msg timestamp="20200629 02:22:58.392" level="TRACE">Arguments: [ "not True and not False and 'Linux' == 'Windows'" | 'Start Process' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' | 'shell=true' ]</msg>
<msg timestamp="20200629 02:22:58.393" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:22:58.393" starttime="20200629 02:22:58.392"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG} and not '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>mono</arg>
<arg>--debug</arg>
<arg>--debugger-agent\=transport\=dt_socket,address\=0.0.0.0:${SERVER_REMOTE_PORT},server\=y,suspend\=${SERVER_REMOTE_SUSPEND}</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
</arguments>
<msg timestamp="20200629 02:22:58.393" level="TRACE">Arguments: [ "not True and False and not 'Linux' == 'Windows'" | 'Start Process' | 'mono' | '--debug' | '--debugger-agent\\=transport\\=dt_socket,address\\=0.0.0.0:${SERVER_REMOTE_PORT},server\\=y,suspend\\=${SERVER_REMOTE_SUSPEND}' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' ]</msg>
<msg timestamp="20200629 02:22:58.393" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:22:58.394" starttime="20200629 02:22:58.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG} and '${SYSTEM}' == 'Windows'</arg>
<arg>Fatal Error</arg>
<arg>Windows doesn't support server remote debug option.</arg>
</arguments>
<msg timestamp="20200629 02:22:58.394" level="TRACE">Arguments: [ "not True and False and 'Linux' == 'Windows'" | 'Fatal Error' | "Windows doesn't support server remote debug option." ]</msg>
<msg timestamp="20200629 02:22:58.394" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:22:58.394" starttime="20200629 02:22:58.394"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not '${SYSTEM}' == 'Windows'</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20200629 02:22:58.395" level="TRACE">Arguments: [ "not 'Linux' == 'Windows'" | 'Wait Until Keyword Succeeds' | '60s' | '1s' | 'Import Library' | 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20200629 02:22:58.395" level="TRACE">Arguments: [ '60s' | '1s' | 'Import Library' | 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<kw name="Import Library" library="BuiltIn">
<doc>Imports a library with the given name and optional arguments.</doc>
<arguments>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20200629 02:22:58.396" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20200629 02:22:59.409" level="FAIL">Getting keyword names from library 'Remote' failed: Calling dynamic method 'get_keyword_names' failed: Connecting remote server at http://127.0.0.1:9999/ failed: [Errno 111] Connection refused</msg>
<msg timestamp="20200629 02:22:59.409" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20200629 02:22:59.410" starttime="20200629 02:22:58.396"></status>
</kw>
<kw name="Import Library" library="BuiltIn">
<doc>Imports a library with the given name and optional arguments.</doc>
<arguments>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20200629 02:23:00.411" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20200629 02:23:01.414" level="FAIL">Getting keyword names from library 'Remote' failed: Calling dynamic method 'get_keyword_names' failed: Connecting remote server at http://127.0.0.1:9999/ failed: [Errno 111] Connection refused</msg>
<msg timestamp="20200629 02:23:01.414" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20200629 02:23:01.414" starttime="20200629 02:23:00.410"></status>
</kw>
<kw name="Import Library" library="BuiltIn">
<doc>Imports a library with the given name and optional arguments.</doc>
<arguments>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20200629 02:23:02.416" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20200629 02:23:02.926" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:23:02.926" starttime="20200629 02:23:02.416"></status>
</kw>
<msg timestamp="20200629 02:23:02.926" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:23:02.926" starttime="20200629 02:22:58.395"></status>
</kw>
<msg timestamp="20200629 02:23:02.926" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:23:02.926" starttime="20200629 02:22:58.394"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SYSTEM}' == 'Windows'</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://localhost:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20200629 02:23:02.927" level="TRACE">Arguments: [ "'Linux' == 'Windows'" | 'Wait Until Keyword Succeeds' | '60s' | '1s' | 'Import Library' | 'Remote' | 'http://localhost:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20200629 02:23:02.927" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:23:02.927" starttime="20200629 02:23:02.926"></status>
</kw>
<kw name="Reset Emulation" library="Remote">
<msg timestamp="20200629 02:23:02.927" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20200629 02:23:03.003" level="TRACE">Return: b''</msg>
<status status="PASS" endtime="20200629 02:23:03.003" starttime="20200629 02:23:02.927"></status>
</kw>
<msg timestamp="20200629 02:23:03.004" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:23:03.004" starttime="20200629 02:22:58.379"></status>
</kw>
<test id="s1-t1" name="Help Menu">
<kw type="setup" name="Reset Emulation" library="Remote">
<msg timestamp="20200629 02:23:03.005" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20200629 02:23:03.009" level="TRACE">Return: b''</msg>
<status status="PASS" endtime="20200629 02:23:03.009" starttime="20200629 02:23:03.005"></status>
</kw>
<kw name="Execute Command" library="Remote">
<arguments>
<arg>mach create</arg>
</arguments>
<msg timestamp="20200629 02:23:03.009" level="TRACE">Arguments: [ 'mach create' ]</msg>
<msg timestamp="20200629 02:23:03.164" level="TRACE">Return: b''</msg>
<status status="PASS" endtime="20200629 02:23:03.164" starttime="20200629 02:23:03.009"></status>
</kw>
<kw name="Execute Command" library="Remote">
<arguments>
<arg>machine LoadPlatformDescription @platforms/boards/stm32f4_discovery-kit.repl</arg>
</arguments>
<msg timestamp="20200629 02:23:03.164" level="TRACE">Arguments: [ 'machine LoadPlatformDescription @platforms/boards/stm32f4_discovery-kit.repl' ]</msg>
<msg timestamp="20200629 02:23:09.964" level="TRACE">Return: b''</msg>
<status status="PASS" endtime="20200629 02:23:09.964" starttime="20200629 02:23:03.164"></status>
</kw>
<kw name="Execute Command" library="Remote">
<arguments>
<arg>machine LoadPlatformDescription @${PWD_PATH}/add-ccm.repl</arg>
</arguments>
<msg timestamp="20200629 02:23:09.965" level="TRACE">Arguments: [ 'machine LoadPlatformDescription @/workspace/add-ccm.repl' ]</msg>
<msg timestamp="20200629 02:23:09.980" level="TRACE">Return: b''</msg>
<status status="PASS" endtime="20200629 02:23:09.980" starttime="20200629 02:23:09.964"></status>
</kw>
<kw name="Execute Command" library="Remote">
<arguments>
<arg>sysbus LoadELF @${PWD_PATH}/renode-example.elf</arg>
</arguments>
<msg timestamp="20200629 02:23:09.980" level="TRACE">Arguments: [ 'sysbus LoadELF @/workspace/renode-example.elf' ]</msg>
<msg timestamp="20200629 02:23:10.274" level="TRACE">Return: b''</msg>
<status status="PASS" endtime="20200629 02:23:10.274" starttime="20200629 02:23:09.980"></status>
</kw>
<kw name="Create Terminal Tester" library="Remote">
<arguments>
<arg>sysbus.uart2</arg>
</arguments>
<msg timestamp="20200629 02:23:10.275" level="TRACE">Arguments: [ 'sysbus.uart2' ]</msg>
<msg timestamp="20200629 02:23:10.296" level="TRACE">Return: 1</msg>
<status status="PASS" endtime="20200629 02:23:10.296" starttime="20200629 02:23:10.274"></status>
</kw>
<kw name="Start Emulation" library="Remote">
<msg timestamp="20200629 02:23:10.297" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20200629 02:23:10.455" level="TRACE">Return: b''</msg>
<status status="PASS" endtime="20200629 02:23:10.456" starttime="20200629 02:23:10.297"></status>
</kw>
<kw name="Wait For Prompt On Uart" library="Remote">
<arguments>
<arg>${SHELL_PROMPT}</arg>
</arguments>
<msg timestamp="20200629 02:23:10.456" level="TRACE">Arguments: [ 'shell&gt;' ]</msg>
<msg timestamp="20200629 02:23:10.655" level="TRACE">Return: {b'groups': [], b'line': b'App STARTED\n\n', b'timestamp': 0.0}</msg>
<status status="PASS" endtime="20200629 02:23:10.655" starttime="20200629 02:23:10.456"></status>
</kw>
<kw name="Write Line To Uart" library="Remote">
<arguments>
<arg>ping</arg>
</arguments>
<msg timestamp="20200629 02:23:10.656" level="TRACE">Arguments: [ 'ping' ]</msg>
<msg timestamp="20200629 02:23:10.685" level="TRACE">Return: {b'groups': [], b'line': b'ping', b'timestamp': 0.0}</msg>
<status status="PASS" endtime="20200629 02:23:10.686" starttime="20200629 02:23:10.656"></status>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arguments>
<arg>TYLER timeout=10</arg>
</arguments>
<msg timestamp="20200629 02:23:10.686" level="TRACE">Arguments: [ 'TYLER timeout=10' ]</msg>
<msg timestamp="20200629 02:25:10.571" level="FAIL">TargetInvocationException: Exception has been thrown by the target of an invocation.
InvalidOperationException: Time for operation to finish has exceeded 00:02:00.000000. Events so far:
[02:23:10.290]   ------------------------------------------------------------------------------------
[02:23:10.635]   App STARTED
[02:23:10.637]   
[02:23:10.467]   &gt;&gt;&gt; 'WaitForPrompt': success
[02:23:10.679]   shell&gt; ping
[02:23:10.687]   PONG
[02:25:10.552]   &gt;&gt;&gt; 'WaitUntilLine': timeout occurred
[02:25:10.552]   &gt;&gt;&gt; Characters waiting in buffer: 
shell&gt; 
[02:25:10.556]   ------------------------------------------------------------------------------------
</msg>
<msg timestamp="20200629 02:25:10.572" level="DEBUG">TargetInvocationException:   at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00083] in &lt;6649516e5b3542319fb262b421af0adb&gt;:0 
  at System.Reflection.MethodBase.Invoke (System.Object obj, System.Object[] parameters) [0x00000] in &lt;6649516e5b3542319fb262b421af0adb&gt;:0 
  at Antmicro.Renode.RobotFramework.Keyword.Execute (System.Object[] arguments) [0x00017] in &lt;e86a8e092e8e4cf88c78ea4466463b92&gt;:0 
  at Antmicro.Renode.RobotFramework.KeywordManager.TryExecuteKeyword (System.String keywordName, System.String[] arguments, System.Object&amp; keywordResult) [0x0005a] in &lt;e86a8e092e8e4cf88c78ea4466463b92&gt;:0 
  at Antmicro.Renode.RobotFramework.XmlRpcServer.RunKeyword (System.String keywordName, System.String[] arguments) [0x00008] in &lt;e86a8e092e8e4cf88c78ea4466463b92&gt;:0 
InvalidOperationException:   at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke(System.Reflection.MonoMethod,object,object[],System.Exception&amp;)
  at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in &lt;6649516e5b3542319fb262b421af0adb&gt;:0 
</msg>
<status status="FAIL" endtime="20200629 02:25:10.573" starttime="20200629 02:23:10.686"></status>
</kw>
<doc>Prints help menu of the command prompt</doc>
<tags>
<tag>non_critical</tag>
</tags>
<status status="FAIL" endtime="20200629 02:25:10.573" critical="no" starttime="20200629 02:23:03.004">TargetInvocationException: Exception has been thrown by the target of an invocation.
InvalidOperationException: Time for operation to finish has exceeded 00:02:00.000000. Events so far:
[02:23:10.290]   ------------------------------------------------------------------------------------
[02:23:10.635]   App STARTED
[02:23:10.637]   
[02:23:10.467]   &gt;&gt;&gt; 'WaitForPrompt': success
[02:23:10.679]   shell&gt; ping
[02:23:10.687]   PONG
[02:25:10.552]   &gt;&gt;&gt; 'WaitUntilLine': timeout occurred
[02:25:10.552]   &gt;&gt;&gt; Characters waiting in buffer: 
shell&gt; 
[02:25:10.556]   ------------------------------------------------------------------------------------
</status>
</test>
<kw type="teardown" name="Teardown" library="renode-keywords">
<msg timestamp="20200629 02:25:10.576" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${SKIP_RUNNING_SERVER}</arg>
<arg>Stop Remote Server</arg>
</arguments>
<msg timestamp="20200629 02:25:10.577" level="TRACE">Arguments: [ b'True' | 'Stop Remote Server' ]</msg>
<msg timestamp="20200629 02:25:10.577" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:25:10.577" starttime="20200629 02:25:10.577"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${SKIP_RUNNING_SERVER}</arg>
<arg>Wait For Process</arg>
</arguments>
<msg timestamp="20200629 02:25:10.577" level="TRACE">Arguments: [ b'True' | 'Wait For Process' ]</msg>
<msg timestamp="20200629 02:25:10.578" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:25:10.578" starttime="20200629 02:25:10.577"></status>
</kw>
<msg timestamp="20200629 02:25:10.578" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:25:10.578" starttime="20200629 02:25:10.576"></status>
</kw>
<metadata>
<item name="HotSpot Action">-</item>
</metadata>
<status status="PASS" endtime="20200629 02:25:10.578" starttime="20200629 02:22:58.308"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
<stat info="non-critical" fail="1" pass="0">non_critical</stat>
<stat info="non-critical" fail="0" pass="0">skipped</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="test-shell-help" pass="0">test-shell-help</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
