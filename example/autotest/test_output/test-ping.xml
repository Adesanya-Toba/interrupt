<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20200629 02:25:10.597" generator="Robot 3.0.4 (Python 2.7.17 on linux2)">
<suite source="/workspace/tests/test-ping.robot" id="s1" name="test-ping">
<kw type="setup" name="Setup" library="renode-keywords">
<msg timestamp="20200629 02:25:10.657" level="TRACE">Arguments: [  ]</msg>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>platform.system()</arg>
<arg>modules=platform</arg>
</arguments>
<assign>
<var>${SYSTEM}</var>
</assign>
<msg timestamp="20200629 02:25:10.657" level="TRACE">Arguments: [ 'platform.system()' | modules='platform' ]</msg>
<msg timestamp="20200629 02:25:10.658" level="TRACE">Return: b'Linux'</msg>
<msg timestamp="20200629 02:25:10.658" level="INFO">${SYSTEM} = Linux</msg>
<status status="PASS" endtime="20200629 02:25:10.658" starttime="20200629 02:25:10.657"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG}</arg>
<arg>Debug</arg>
<arg>${CONFIGURATION}</arg>
</arguments>
<assign>
<var>${CONFIGURATION}</var>
</assign>
<msg timestamp="20200629 02:25:10.658" level="TRACE">Arguments: [ 'not True and False' | 'Debug' | '${CONFIGURATION}' ]</msg>
<msg timestamp="20200629 02:25:10.659" level="TRACE">Return: 'Release'</msg>
<msg timestamp="20200629 02:25:10.659" level="INFO">${CONFIGURATION} = Release</msg>
<status status="PASS" endtime="20200629 02:25:10.659" starttime="20200629 02:25:10.658"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>--robot-server-port</arg>
<arg>${PORT_NUMBER}</arg>
<arg>--hide-log</arg>
</arguments>
<assign>
<var>@{PARAMS}</var>
</assign>
<msg timestamp="20200629 02:25:10.659" level="TRACE">Arguments: [ '--robot-server-port' | b'9999' | '--hide-log' ]</msg>
<msg timestamp="20200629 02:25:10.660" level="TRACE">Return: ['--robot-server-port', b'9999', '--hide-log']</msg>
<msg timestamp="20200629 02:25:10.660" level="INFO">@{PARAMS} = [ --robot-server-port | 9999 | --hide-log ]</msg>
<status status="PASS" endtime="20200629 02:25:10.660" starttime="20200629 02:25:10.659"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${DISABLE_XWT}</arg>
<arg>Insert Into List</arg>
<arg>${PARAMS}</arg>
<arg>0</arg>
<arg>--disable-xwt</arg>
</arguments>
<msg timestamp="20200629 02:25:10.660" level="TRACE">Arguments: [ 'False' | 'Insert Into List' | '${PARAMS}' | '0' | '--disable-xwt' ]</msg>
<msg timestamp="20200629 02:25:10.661" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:25:10.661" starttime="20200629 02:25:10.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER}</arg>
<arg>File Should Exist</arg>
<arg>${DIRECTORY}/${BINARY_NAME}</arg>
<arg>msg=Robot Framework remote server binary not found (${DIRECTORY}/${BINARY_NAME}). Did you forget to build it in ${CONFIGURATION} configuration?</arg>
</arguments>
<msg timestamp="20200629 02:25:10.661" level="TRACE">Arguments: [ 'not True' | 'File Should Exist' | '${DIRECTORY}/${BINARY_NAME}' | 'msg=Robot Framework remote server binary not found (${DIRECTORY}/${BINARY_NAME}). Did you forget to build it in ${CONFIGURATION} configuration?' ]</msg>
<msg timestamp="20200629 02:25:10.661" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:25:10.661" starttime="20200629 02:25:10.661"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and not '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>mono</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
</arguments>
<msg timestamp="20200629 02:25:10.662" level="TRACE">Arguments: [ "not True and not False and not 'Linux' == 'Windows'" | 'Start Process' | 'mono' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' ]</msg>
<msg timestamp="20200629 02:25:10.662" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:25:10.662" starttime="20200629 02:25:10.662"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<arg>shell=true</arg>
</arguments>
<msg timestamp="20200629 02:25:10.663" level="TRACE">Arguments: [ "not True and not False and 'Linux' == 'Windows'" | 'Start Process' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' | 'shell=true' ]</msg>
<msg timestamp="20200629 02:25:10.663" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:25:10.663" starttime="20200629 02:25:10.662"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG} and not '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>mono</arg>
<arg>--debug</arg>
<arg>--debugger-agent\=transport\=dt_socket,address\=0.0.0.0:${SERVER_REMOTE_PORT},server\=y,suspend\=${SERVER_REMOTE_SUSPEND}</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
</arguments>
<msg timestamp="20200629 02:25:10.663" level="TRACE">Arguments: [ "not True and False and not 'Linux' == 'Windows'" | 'Start Process' | 'mono' | '--debug' | '--debugger-agent\\=transport\\=dt_socket,address\\=0.0.0.0:${SERVER_REMOTE_PORT},server\\=y,suspend\\=${SERVER_REMOTE_SUSPEND}' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' ]</msg>
<msg timestamp="20200629 02:25:10.663" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:25:10.664" starttime="20200629 02:25:10.663"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG} and '${SYSTEM}' == 'Windows'</arg>
<arg>Fatal Error</arg>
<arg>Windows doesn't support server remote debug option.</arg>
</arguments>
<msg timestamp="20200629 02:25:10.664" level="TRACE">Arguments: [ "not True and False and 'Linux' == 'Windows'" | 'Fatal Error' | "Windows doesn't support server remote debug option." ]</msg>
<msg timestamp="20200629 02:25:10.664" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:25:10.664" starttime="20200629 02:25:10.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not '${SYSTEM}' == 'Windows'</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20200629 02:25:10.665" level="TRACE">Arguments: [ "not 'Linux' == 'Windows'" | 'Wait Until Keyword Succeeds' | '60s' | '1s' | 'Import Library' | 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20200629 02:25:10.665" level="TRACE">Arguments: [ '60s' | '1s' | 'Import Library' | 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<kw name="Import Library" library="BuiltIn">
<doc>Imports a library with the given name and optional arguments.</doc>
<arguments>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20200629 02:25:10.666" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20200629 02:25:10.851" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:25:10.851" starttime="20200629 02:25:10.665"></status>
</kw>
<msg timestamp="20200629 02:25:10.852" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:25:10.852" starttime="20200629 02:25:10.665"></status>
</kw>
<msg timestamp="20200629 02:25:10.852" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:25:10.852" starttime="20200629 02:25:10.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SYSTEM}' == 'Windows'</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://localhost:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20200629 02:25:10.852" level="TRACE">Arguments: [ "'Linux' == 'Windows'" | 'Wait Until Keyword Succeeds' | '60s' | '1s' | 'Import Library' | 'Remote' | 'http://localhost:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20200629 02:25:10.853" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:25:10.853" starttime="20200629 02:25:10.852"></status>
</kw>
<kw name="Reset Emulation" library="Remote">
<msg timestamp="20200629 02:25:10.853" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20200629 02:25:10.919" level="TRACE">Return: b''</msg>
<status status="PASS" endtime="20200629 02:25:10.919" starttime="20200629 02:25:10.853"></status>
</kw>
<msg timestamp="20200629 02:25:10.920" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:25:10.920" starttime="20200629 02:25:10.657"></status>
</kw>
<test id="s1-t1" name="Ping">
<kw type="setup" name="Reset Emulation" library="Remote">
<msg timestamp="20200629 02:25:10.921" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20200629 02:25:10.926" level="TRACE">Return: b''</msg>
<status status="PASS" endtime="20200629 02:25:10.927" starttime="20200629 02:25:10.921"></status>
</kw>
<kw name="Execute Command" library="Remote">
<arguments>
<arg>mach create</arg>
</arguments>
<msg timestamp="20200629 02:25:10.927" level="TRACE">Arguments: [ 'mach create' ]</msg>
<msg timestamp="20200629 02:25:10.930" level="TRACE">Return: b''</msg>
<status status="PASS" endtime="20200629 02:25:10.930" starttime="20200629 02:25:10.927"></status>
</kw>
<kw name="Execute Command" library="Remote">
<arguments>
<arg>machine LoadPlatformDescription @platforms/boards/stm32f4_discovery-kit.repl</arg>
</arguments>
<msg timestamp="20200629 02:25:10.931" level="TRACE">Arguments: [ 'machine LoadPlatformDescription @platforms/boards/stm32f4_discovery-kit.repl' ]</msg>
<msg timestamp="20200629 02:25:11.432" level="TRACE">Return: b''</msg>
<status status="PASS" endtime="20200629 02:25:11.432" starttime="20200629 02:25:10.930"></status>
</kw>
<kw name="Execute Command" library="Remote">
<arguments>
<arg>machine LoadPlatformDescription @${PWD_PATH}/add-ccm.repl</arg>
</arguments>
<msg timestamp="20200629 02:25:11.433" level="TRACE">Arguments: [ 'machine LoadPlatformDescription @/workspace/add-ccm.repl' ]</msg>
<msg timestamp="20200629 02:25:11.450" level="TRACE">Return: b''</msg>
<status status="PASS" endtime="20200629 02:25:11.451" starttime="20200629 02:25:11.433"></status>
</kw>
<kw name="Execute Command" library="Remote">
<arguments>
<arg>sysbus LoadELF @${PWD_PATH}/renode-example.elf</arg>
</arguments>
<msg timestamp="20200629 02:25:11.451" level="TRACE">Arguments: [ 'sysbus LoadELF @/workspace/renode-example.elf' ]</msg>
<msg timestamp="20200629 02:25:11.522" level="TRACE">Return: b''</msg>
<status status="PASS" endtime="20200629 02:25:11.523" starttime="20200629 02:25:11.451"></status>
</kw>
<kw name="Create Terminal Tester" library="Remote">
<arguments>
<arg>sysbus.uart2</arg>
</arguments>
<msg timestamp="20200629 02:25:11.523" level="TRACE">Arguments: [ 'sysbus.uart2' ]</msg>
<msg timestamp="20200629 02:25:11.527" level="TRACE">Return: 2</msg>
<status status="PASS" endtime="20200629 02:25:11.527" starttime="20200629 02:25:11.523"></status>
</kw>
<kw name="Start Emulation" library="Remote">
<msg timestamp="20200629 02:25:11.527" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20200629 02:25:11.632" level="TRACE">Return: b''</msg>
<status status="PASS" endtime="20200629 02:25:11.632" starttime="20200629 02:25:11.527"></status>
</kw>
<kw name="Wait For Prompt On Uart" library="Remote">
<arguments>
<arg>${SHELL_PROMPT}</arg>
</arguments>
<msg timestamp="20200629 02:25:11.632" level="TRACE">Arguments: [ 'shell&gt;' ]</msg>
<msg timestamp="20200629 02:25:11.637" level="TRACE">Return: {b'groups': [], b'line': b'App STARTED\n\n', b'timestamp': 0.8}</msg>
<status status="PASS" endtime="20200629 02:25:11.637" starttime="20200629 02:25:11.632"></status>
</kw>
<kw name="Write Line To Uart" library="Remote">
<arguments>
<arg>help</arg>
</arguments>
<msg timestamp="20200629 02:25:11.637" level="TRACE">Arguments: [ 'help' ]</msg>
<msg timestamp="20200629 02:25:11.642" level="TRACE">Return: {b'groups': [], b'line': b'help', b'timestamp': 0.0}</msg>
<status status="PASS" endtime="20200629 02:25:11.642" starttime="20200629 02:25:11.637"></status>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arguments>
<arg>help: Lists all commands</arg>
</arguments>
<msg timestamp="20200629 02:25:11.642" level="TRACE">Arguments: [ 'help: Lists all commands' ]</msg>
<msg timestamp="20200629 02:25:11.648" level="TRACE">Return: {b'groups': [], b'line': b'help: Lists all commands', b'timestamp': 0.8}</msg>
<status status="PASS" endtime="20200629 02:25:11.648" starttime="20200629 02:25:11.642"></status>
</kw>
<doc>Ping Pong</doc>
<tags>
<tag>critical</tag>
</tags>
<status status="PASS" endtime="20200629 02:25:11.648" critical="yes" starttime="20200629 02:25:10.920"></status>
</test>
<kw type="teardown" name="Teardown" library="renode-keywords">
<msg timestamp="20200629 02:25:11.650" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${SKIP_RUNNING_SERVER}</arg>
<arg>Stop Remote Server</arg>
</arguments>
<msg timestamp="20200629 02:25:11.651" level="TRACE">Arguments: [ b'True' | 'Stop Remote Server' ]</msg>
<msg timestamp="20200629 02:25:11.651" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:25:11.651" starttime="20200629 02:25:11.651"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${SKIP_RUNNING_SERVER}</arg>
<arg>Wait For Process</arg>
</arguments>
<msg timestamp="20200629 02:25:11.651" level="TRACE">Arguments: [ b'True' | 'Wait For Process' ]</msg>
<msg timestamp="20200629 02:25:11.652" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:25:11.652" starttime="20200629 02:25:11.651"></status>
</kw>
<msg timestamp="20200629 02:25:11.652" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20200629 02:25:11.652" starttime="20200629 02:25:11.650"></status>
</kw>
<metadata>
<item name="HotSpot Action">-</item>
</metadata>
<status status="PASS" endtime="20200629 02:25:11.652" starttime="20200629 02:25:10.599"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
<stat info="non-critical" fail="0" pass="0">non_critical</stat>
<stat info="non-critical" fail="0" pass="0">skipped</stat>
<stat fail="0" pass="1">critical</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="test-ping" pass="1">test-ping</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
